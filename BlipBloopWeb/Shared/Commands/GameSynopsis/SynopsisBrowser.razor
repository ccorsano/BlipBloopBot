@using System.Linq;
@using Conceptoire.Twitch.API
@using Conceptoire.Twitch.Model
@using BlipBloopBot.Storage
@inject TwitchAPIClient TwitchClient
@inject IGameLocalizationStore LocStore

<table>
    <thead>
        <tr>
            <th></th>
            <th>Category Name</th>
            <th>Description</th>
            <th>Source</th>
        </tr>
    </thead>
    @if (Categories != null)
    {
        <tbody>
            @foreach (var category in Categories)
            {
                <tr>
                    <td><img src="@category.category.BoxArtUri" /></td>
                    <td>@(category.info?.Name ?? category.category.Name)</td>
                    <td>@(category.info?.Summary)</td>
                    <td>@(category.info?.Source)</td>
                </tr>
            }
        </tbody>

    }
    else
    {
        <tbody>
            <tr>
                <td colspan="4"><div class="spinner-border"></div></td>
            </tr>
        </tbody>

    }
</table>

@code {
    [CascadingParameter(Name = "ServiceContext")]
    public MainLayout ServiceContext { get; set; }

    private (GameInfo info, HelixCategoriesSearchEntry category)[] Categories { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await LoadCategories();
    }

    protected async Task LoadCategories()
    {
        List<(GameInfo info, HelixCategoriesSearchEntry category)> categoryList = new List<(GameInfo info, HelixCategoriesSearchEntry category)>();
        await foreach (var category in TwitchClient.EnumerateTwitchCategoriesAsync())
        {
            var info = await LocStore.ResolveLocalizedGameInfoAsync("en", category.Id);
            categoryList.Add((info, category));
            if (categoryList.Count >= 10)
                break;
        }
        Categories = categoryList.ToArray();
    }

}
